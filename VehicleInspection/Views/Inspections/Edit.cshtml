@model VehicleInspection.Models.Inspection

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Inspection</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.InspectionID)

    <div class="form-group">
        @Html.LabelFor(model => model.VehicleId, "Vehicle", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("VehicleId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VehicleId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Timestamp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Timestamp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Timestamp, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Tires)
                @Html.LabelFor(model => model.Tires)
                @Html.ValidationMessageFor(model => model.Tires, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Brakes)
                @Html.LabelFor(model => model.Brakes)
                @Html.ValidationMessageFor(model => model.Brakes, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Fluids)
                @Html.LabelFor(model => model.Fluids)
                @Html.ValidationMessageFor(model => model.Fluids, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Lights)
                @Html.LabelFor(model => model.Lights)
                @Html.ValidationMessageFor(model => model.Lights, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Windshield)
                @Html.LabelFor(model => model.Windshield)
                @Html.ValidationMessageFor(model => model.Windshield, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Exterior)
                @Html.LabelFor(model => model.Exterior)
                @Html.ValidationMessageFor(model => model.Exterior, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Interior)
                @Html.LabelFor(model => model.Interior)
                @Html.ValidationMessageFor(model => model.Interior, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Supplies)
                @Html.LabelFor(model => model.Supplies)
                @Html.ValidationMessageFor(model => model.Supplies, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issues, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Issues, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Issues, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.HiddenFor(model => model.HasImages)
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.ActionLink("Cancel", "Index", "Home", null, new { @class = "btn btn-default" })
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
