@using Microsoft.AspNet.Identity
@model VehicleInspection.Models.Inspection

@{
    ViewBag.Title = "Daily Inspection Form";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Create","Inspections",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Fill out the following form daily before your shift.</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.VehicleId, "Vehicle", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("VehicleId", null, "- Select Vehicle -", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VehicleId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{var user = (System.Security.Claims.ClaimsIdentity)User.Identity;}
            @Html.EditorFor(model => model.Name, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
                    @Value = user.FindFirstValue("Name"),
                    @readonly = "readonly"
                }
            })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Timestamp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Timestamp, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToString("M/d/yyyy h:mm tt"), @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Timestamp, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />

    <h4>Check all of the following:</h4>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Tires)
                @Html.LabelFor(model => model.Tires)
                @Html.ValidationMessageFor(model => model.Tires, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Brakes)
                @Html.LabelFor(model => model.Brakes)
                @Html.ValidationMessageFor(model => model.Brakes, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Fluids)
                @Html.LabelFor(model => model.Fluids)
                @Html.ValidationMessageFor(model => model.Fluids, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Lights)
                @Html.LabelFor(model => model.Lights)
                @Html.ValidationMessageFor(model => model.Lights, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Windshield)
                @Html.LabelFor(model => model.Windshield)
                @Html.ValidationMessageFor(model => model.Windshield, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Exterior)
                @Html.LabelFor(model => model.Exterior)
                @Html.ValidationMessageFor(model => model.Exterior, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Interior)
                @Html.LabelFor(model => model.Interior)
                @Html.ValidationMessageFor(model => model.Interior, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-offset-2 col-xs-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Supplies)
                @Html.LabelFor(model => model.Supplies)
                @Html.ValidationMessageFor(model => model.Supplies, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <hr />

    <h4>Additional Information (optional)</h4>

    <div class="form-group">
        <div>

        </div>
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Issues, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Issues, new { htmlAttributes = new { @class = "form-control", id = "issues" } })
            @Html.ValidationMessageFor(model => model.Issues, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Upload Image(s)</label>
        <div class="col-md-10">
            <input name="ImageFiles" type="file" multiple/>
            @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />

    <div class="form-group">
        <div class="col-md-offset-3 col-md-9">
            <input type="submit" value="Complete" class="btn btn-primary" />
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
            $(document).ready(function () {
                $('form').submit(function (e) {
                    var currentForm = this;
                    var issues = $("#issues").val();
                    var hasIssues = (issues == "") ? false : true;
                    if (hasIssues) {
                        e.preventDefault();
                        bootbox.confirm({
                            title: "Confirm Submit",
                            message: "An email notification will be sent to management with your reported issue. If the issue is urgent, call dispatch to report it.",
                            buttons: {
                                confirm: {
                                    label: 'Confirm',
                                    className: 'btn-primary'
                                },
                                cancel: {
                                    label: 'Cancel',
                                    className: 'btn-default'
                                }
                            },
                            callback: function (result) {
                                if (result) {
                                    currentForm.submit();
                                }
                            }
                        });
                    }
                });
            }
            );
    </script>
}
